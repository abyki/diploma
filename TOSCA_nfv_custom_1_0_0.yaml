tosca_definitions_version: tosca_simple_yaml_1_2

imports:
  - TOSCA_definition_1.yaml
  - TOSCA_nfv_definition_1_0_0.yaml
#------------------------------------------------------------------------------------------------------------------------------------
topology_template:
  inputs:
    firewall_rule:
      type: string
    firewall_protocol:
      type: string
    firewall_action:
      type: string
    firewall_name:
      type: string
    firewall_interface:
      type: string
    firewall_route:
      type: string 
    dhcp_name:
      type: string
    range_start: 
      type: string
    range_stop: 
      type: string
    external_network_name:
      type: string
    internal_cidr:
      type: string
    internal_prefix:
      type: integer
    vyos_addr:
      type: string
    CustomVM_ip:
      type: string
    vyos_interface: 
      type: string 
    CustomVM_ex_ip:
      type: string
    CustomVM_mac:
      type: string
    eth: 
      type: string
    external_gateway:
      type: string
    external_prefix:
      type: integer
    metadata_server:
      type: string
    dhcp_ip:
      type: string
    number:
      type: integer
    internal_prefix:
      type: integer
    dhcp_name:
      type: string
    sm_name:
      type: string

    
#  node_templates:    
  
#------------------------------------------------------------------------------------------------------------------------------------

data_types:
  nfv.datatypes.vyos_config.dhcp:
    derived_from: tosca.datatypes.Root
    properties:
      internal_cidr:
        type: string
        required: true
      internal_prefix:
        type: integer
        required: true
      range_start:
        type: integer
        required: false
        default: 5
      range_stop:
        type: string
        required: false
        default: 200

  nfv.datatype.vyos_config.dhcp.static_mapping:
    derived_from: tosca.datatypes.Root
    properties:
      st_name:
        type: string
        required: true
      ip_addr:
        type: string
        required: true
      mac_addr:
        type: string
        required: true
  
  nfv.datatypes.vyos_config.Firewall:
    derived_from: tosca.datatypes.Root
    properties:
      rule:
        type: integer
        required: true
      protocol:
        type: string
        required: true
      action:
        type: string
        required: true
        constraints:
          - valid_values: [ accept, drop, reject ]
      interface:
        type: string
        required: true
      route:
        type: string
        required: true
        constraints:
          - valid_values: [ IN, OUT]
  
  nfv.datatypes.vyos_config.NAT:
    derived_from: tosca.datatypes.Root
    properties:
      route:
        type: string
        required: true
        constraints:
          - valid_values: [ source, destination ]
      rule:
        type: integer
        required: true        
      interface:
        type: integer
        required: true
      translation_addr: 
        type: integer
        required: true
      destination_addr:
        type: integer
        required: true
  
  nfv.datatypes.vyos_config.interfaces:
    derived_from: tosca.datatypes.Root
    properties:
      interface: 
        type: string
        required: true
      addr:
        type: string
        required: true

  nfv.datatypes.vyos_config.interfaces.firewall:
    derived_from: nfv.datatypes.vyos_config.interfaces
    properties:
      firewall_interface:
        type: string
        required: true
      firewall_route:
        type: string
        required: true
        constraints:
          - valid_values: [ IN, OUT ]
      firewall_name: 
        type: string
        required: true
      
  nfv.datatypes.ScalingAspect:
    derived_from: tosca.datatypes.Root
    properties:
      name:
        type: string
        required: true
      description:
        type: string
        required: true
      max_scale_level:
        type: integer # positiveInteger
        required: true
        constraints:
          - greater_or_equal: 0
      step_deltas:
        type: list
        required: false
        entry_schema:
          type: string # Identifier

  nfv.datatypes.InstantiationLevel:
    derived_from: tosca.datatypes.Root
    properties:
      description:
        type: string
        description: Human readable description of the level
        required: true
      scale_info:
        type: map # key: aspectId
        required: false
        entry_schema:
          type: nfv.datatypes.ScaleInfo

  nfv.datatypes.ScaleInfo:
    derived_from: tosca.datatypes.Root
    properties:
      scale_level:
        type: integer
        description: The scale level for a particular aspect
        required: true
        constraints:
          - greater_or_equal: 0

  nfv.datatypes.VirtualBlockStorageData:
    derived_from: tosca.datatypes.Root
    properties:
      size_of_storage:
        type: scalar-unit.size
        description: Size of virtualised storage resource
        required: true
        constraints:
          - greater_or_equal: 0 B
      vdu_storage_requirements:
        type: map
        required: false
        entry_schema:
          type: string

  nfv.datatypes.SwImageData:
    derived_from: tosca.datatypes.Root
    properties: 
      name:
        type: string
        required: true
      version:
        type: string
        required: true
      disk_format:
        type: string
        required: true
        constraints:
          - valid_values: [ aki, ami, ari, iso, qcow2, raw, vdi, vhd, vhdx, vmdk ]
      min_disk:
        type: scalar-unit.size 
        required: true
        constraints:
          - greater_or_equal: 0 B
      min_ram:
        type: scalar-unit.size
        required: false
        constraints:
          - greater_or_equal: 0 B
      size:
        type: scalar-unit.size
        required: true
      operating_system:
        type: string
        required: false

  nfv.datatypes.VirtualMemory:
    derived_from: tosca.datatypes.Root
    properties:
      virtual_mem_size:
        type: scalar-unit.size
        required: true

  nfv.datatypes.VirtualCpu:
    derived_from: tosca.datatypes.Root
    properties:
      cpu_architecture:
        type: string
        description: CPU architecture type. Examples are x86, ARM
        required: false
      num_virtual_cpu:
        type: integer
        description: Number of virtual CPUs
        required: true
        constraints:
          - greater_than: 0
#------------------------------------------------------------------------------------------------------------------------------------

node_types:
  nfv.nodes.Compute.VDU:
    derived_from: tosca.nodes.Compute
    capabilities:
      virtualbinding:
        type: nfv.capabilities.VirtualBindable
      virtual_compute:
        type: nfv.capabilities.VirtualCompute
  
  nfv.nodes.VyOS:
    derived_from: nfv.nodes.Compute.VDU
    properties:
      external_network_name:
        type: string
        required: yes
    capabilities:
      vyos:
        type: nfv.capabilities.VyOS
    interfaces:
      standard:
        create:
          implementation: nfv.vyos_config.interfaces.eth1.sh
          inputs: 
            vyos_addr: { type: string }
            internal_prefix: { type: string } 
            vyos_interface: { type: string }

  nfv.nodes.VyOS.VNF:
    derived_from: tosca.nodes.Root
    requirements:
      - host: nfv.nodes.VyOS
      - virtualLink:
          capability: nfv.capabilities.VirtualLinkable
          relationship: nfv.relationships.VirtualLinksTo
          node: nfv.nodes.VL
    
  nfv.nodes.VyOS.VNF.Firewall:
    derived_from: nfv.nodes.VyOS.VNF
    properties:
      firewall:
        type: list
        entry_schema: 
          type: nfv.datatype.vyos_config.Firewall
      interface:
        type: list
        entry_schema:
          type: nfv.datatype.vyos_config.interfaces.Firewall  
    interfaces:
      standard:
        create:
          implementation: nfv.vyos_config.firewall.sh
#          - implementation: nfv.vyos_config.interfaces.sh
          inputs:
            firewall_protocol: { type: string } #{get_input: firewall_protocol }
            firewall_action: { type: string } #{get_input: firewall_action }
            firewall_name: { type: string } #{get_input: firewall_name }
            firewall_rule: { type: string } #{get_input: firewall_rule }

  nfv.nodes.VyOS.VNF.dhcp:
    derived_from: nfv.nodes.VyOS.VNF
    properties:
      dhcp:
        type: nfv.datatype.vyos_config.dhcp
      static_mapping:
        type: list
        entry_schema:
          type: nfv.datatype.vyos_config.dhcp.static_mapping
    interfaces:
      standard:
        create:
          implementation: nfv.vyos_config.dhcp.sh
          inputs:
            dhcp_name: { type: string } #{ get_property: [ external_network_name, sidr ] }
            internal_cidr: { type: string }
            internal_prefix: { type: string }
            vyos_addr: { type: string }
            range_start: { type: string }
            range_stop: { type: string }

  nfv.nodes.VyOS.VNF.NAT:
    derived_from: tosca.nodes.Root
    properties:
      nat:
        type: list
        entry_schema:
          type: nfv.datatype.vyos_config.NAT
    interfaces:
      standard:
        create:
          implementation: nfv.vyos_config.nat.sh
          inputs:
            CustomVM_ex_ip: { type: string }
            eth: { type: string }
            CustomVM_ip: { type: string }
           
  nfv.nodes.VyOS.VNF.interfaces.firewall:
    derived_from: tosca.nodes.Root
    properties:
      interface:
        type: nfv.datatypes.vyos_config.interfaces.firewall
    interfaces:
      standard:
        create:
          implementation: nfv.vyos_config.interfaces.sh
          inputs:
            firewall_interface: { type: string } 
            firewall_route: { type: string }
            firewall_name: { type: string }

  nfv.nodes.VL:
    derived_from: tosca.nodes.Root
    capabilities:
      virtual_linkable:
        type: nfv.capabilities.VirtualLinkable
    requirements:
      - host: nfv.nodes.VyOS
        relationship: VyOS-VM
      
      - host: nfv.nodes.Compute.VDU
        relationship: DependsOn

  nfv.nodes.CP:
    derived_from: tosca.nodes.network.Port
    properties:
      type:
        type: string
        required: false
    requirements:
      - virtualLink:
          capability: nfv.capabilities.VirtualLinkable
          relationship: nfv.relationships.VirtualLinksTo
          node: tosca.nodes.nfv.VL
      - virtualBinding:
          capability: nfv.capabilities.VirtualBindable
          relationship: nfv.relationships.VirtualBindsTo
          node: nfv.nodes.Compute.VDU
    attributes:
      address:
        type: string

             
#------------------------------------------------------------------------------------------------------------------------------------
relationship_types:
  nfv.relationships.VyOS-VM:
    derived_from: tosca.relationships.DependsON
    interfaces:
      standard:
        configure:
          implementation:
            - nfv.vyos_config.interfaces.eth2.sh
            - nfv.vyos_config.dhcp.staticmapping.sh
            - nfv.vyos_config.nat.sh
            - nfv.vyos_shell.route_table.sh
          inputs:
            internal_cidr: { type: string } #{ get_input: subnet }
            CustomVM_ip: { type: string } #{ get_attribute: [ cp1, ip_adress ] }
            CustomVM_ex_ip: { type: string } #{ get_attribute: [ cp1, ip_adress ] }
            CustomVM_mac: { type: string } #{ get_attribute: [ cp1, mac_adress ] }
            eth: { type: string } #{ get_input: eth }
            external_gateway: { type: string }
            external_prefix: { type: integer }
            metadata_server: { type: string }
            dhcp_ip: { type: string }
            number: { type: integer }
            internal_prefix: { type: integer }
            dhcp_name: { type: string }
            sm_name: { type: string }
            vyos_addr: { type: string }

  nfv.relationships.VirtualLinksTo:
    derived_from: tosca.relationships.network.LinksTo
    valid_target_types: [ nfv.capabilities.VirtualLinkable ]

  

  nfv.relationships.VirtualBindsTo:
    derived_from: tosca.relationships.network.BindsTo
    valid_target_types: [ nfv.capabilities.VirtualBindable ]

#-------------------------------------------------------------------------------------------------------------------------------------
capability_types:
  nfv.capabilities.VirtualLinkable:
    derived_from: tosca.capabilities.network.Linkable

  nfv.capabilities.VirtualBindable:
    derived_from: tosca.capabilities.network.Bindable

  nfv.capabilities.VirtualCompute:
    derived_from: tosca.capabilities.Node
    properties:
      virtual_memory:
        type: nfv.datatypes.VirtualMemory
        required: true
      virtual_cpu:
        type: nfv.datatypes.VirtualCpu
        required: true
      virtual_local_storage:
        type: list
        required: false
        entry_schema:
          type: nfv.datatypes.VirtualBlockStorageData

  nfv.capabilities.vyos:
    derived_from: tosca.capabilities.OperatingSystem
    properties:
      type:
        required: false
        type: string
        default: vyos
      distribution:
        required: false
        type: string
        default: crux

#-----------------------------------------------------------------------------------------------------------------------------------
artifact_types:
  nfv.artifacts.SwImage:
    derived_from: tosca.artifacts.Deployment.Image

#-----------------------------------------------------------------------------------------------------------------------------------
policy_types:
  nfv.policies.ScalingAspects:
    derived_from: tosca.policies.Root
    properties:
      aspects:
        type: map # key: aspectId
        required: true
        entry_schema:
          type: nfv.datatypes.ScalingAspect
        constraints:
          - min_length: 1

  nfv.policies.InstantiationLevels:
    derived_from: tosca.policies.Root
    properties:
      levels:
        type: map # key: levelId
        required: true
        entry_schema:
          type: nfv.datatypes.InstantiationLevel
        constraints:
          - min_length: 1
      default_level:
        type: string # levelId
        required: false 

